plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.ecoatm.devicepickup'
    compileSdk 33

    defaultConfig {
        applicationId "com.ecoatm.pickuptestandroid"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.ecoatm.devicepickup.HiltTestRunner"
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDirs += sharedTestDir
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            manifestPlaceholders = [crashlyticsCollectionEnabled:"false"]
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsCollectionEnabled:"true"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //Navigation Component
    implementation("androidx.navigation:navigation-runtime-ktx:2.5.3")
    implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
    implementation("androidx.navigation:navigation-ui-ktx:2.5.3")

    //Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")

    //ViewModel and LiveData
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.5.1")

    //ROOM Database
    implementation("androidx.room:room-runtime:2.5.0")
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    implementation 'androidx.test:runner:1.5.2'
    kapt("androidx.room:room-compiler:2.5.0")
    implementation("androidx.room:room-ktx:2.5.0")

    //Retrofit
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    //QR Code Scanner
    implementation 'com.google.android.gms:play-services-code-scanner:16.0.0-beta3'

    //Hilt Dependency Injection
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    // TestImplementations
    implementation "androidx.test:core:1.5.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.8.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.mockito:mockito-core:4.7.0"

    // Android Test Implementations
    androidTestImplementation "junit:junit:4.13.2"
    //androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "org.mockito:mockito-android:4.7.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "org.hamcrest:hamcrest:2.2"
    androidTestImplementation "org.mockito:mockito-core:4.7.0"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.43.2'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
    debugImplementation "androidx.fragment:fragment-testing:1.3.0-alpha08"

    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.5.1") {
        exclude group : "org.checkerframework", module : "checker"
    }
    //MockWebserver
    testImplementation('com.squareup.okhttp3:mockwebserver:4.9.1')
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}